user  nginx;
worker_processes  auto;

error_log  /var/log/openresty/error.log notice;
pid        /var/log/openresty/nginx.pid;

env OIDC_REDIRECT_URI;
env OIDC_DISCOVERY;
env OIDC_TOKEN_ENDPOINT_AUTH_METHOD;
env OIDC_CLIENT_ID;
env OIDC_CLIENT_SECRET;
env OIDC_SSL_VERIFY;
env OIDC_KEEPALIVE;
env OIDC_RESPONSE_MODE;
env OIDC_SCOPE;
env OIDC_REFRESH_SESSION_INTERVAL;
env OIDC_REDIRECT_URI_SCHEME;
env OIDC_LOGOUT_PATH;
env OIDC_REDIRECT_AFTER_LOUGOUT_URI;
env OIDC_REDIRECT_AFTER_LOGOUT_URI_WITH_ID_TOKEN;
env OIDC_REDIRECT_URI;
env OIDC_ACCEPT_NONE_ALG;
env OIDC_ACCEPT_UNSUPPORTED_ALG;
env OIDC_RENEW_ACCESS_TOKEN;
env OIDC_ACCESS_TOKEN_EXPIRES_IN;
env OIDC_ACCESS_TOKEN_EXPIRES_LEEWAY;
env OIDC_USE_NONCE;
env OIDC_REVOKE_TOKENS_ON_LOGOUT;
env OIDC_USE_PKCE;
env OIDC_REDIS_HOST;
env OIDC_REDIS_PORT;
env OIDC_REDIS_USE_SSL;
env OIDC_REDIS_SSL_VERIFY;
env OIDC_REDIS_PASSWORD;

events {
    worker_connections  1024;
}

http {
    lua_shared_dict discovery 1m;
    lua_shared_dict sessions 10m;
    lua_package_path '~/lua/?.lua;;';
    lua_ssl_trusted_certificate /etc/ssl/certs/bundled/combined-ca-certificates.crt;
    lua_ssl_verify_depth 5;

    resolver local=on;

    init_by_lua_block {
        require "resty.session".init({
            storage = "redis",
            hash_storage_key = os.getenv("OIDC_SESSION_COOKIE_HASH_STORAGE_KEY") or true,
            cookie_domain = os.getenv("OIDC_SESSION_COOKIE_DOMAIN") or nil,
            cookie_secure = os.getenv("OIDC_SESSION_COOKIE_SECURE") or true,
            cookie_same_site = os.getenv("OIDC_SESSION_COOKIE_SAME_SITE") or "Strict",
            cookie_name = os.getenv("OIDC_SESSION_COOKIE_NAME") or "session",
            cookie_prefix = os.getenv("OIDC_SESSION_COOKIE_PREFIX") or "__Secure-",
            redis = {
                host = os.getenv("OIDC_REDIS_HOST"),
                port = os.getenv("OIDC_REDIS_PORT") or 6379,
                ssl = os.getenv("OIDC_REDIS_USE_SSL") or true,
                ssl_verify = os.getenv("OIDC_REDIS_SSL_VERIFY") or true,
                password = os.getenv("OIDC_REDIS_PASSWORD")
            }
        })
    }

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/openresty/access.log  main;


    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  120;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;
}
